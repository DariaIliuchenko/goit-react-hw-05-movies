{"version":3,"file":"static/js/667.bb4b7c1e.chunk.js","mappings":"2MAyCA,UArCmB,WACjB,OAAsCA,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAcF,EAAaG,IAAI,UAC/BC,GAAWC,EAAAA,EAAAA,MAejB,OALAC,EAAAA,EAAAA,YAAU,WACHJ,IACLK,EAAAA,EAAAA,IAAuBL,GAAaM,KAAKV,EAC1C,GAAE,CAACI,KAGF,iCACE,kBAAMO,SAfW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,OACTC,EAAQF,EAAKG,SAAS,GAAGC,MAC/Bf,EAAgB,CAAEgB,OAAQH,IAC1BF,EAAKM,OACN,EASG,WACE,kBAAOC,KAAK,OAAOC,KAAK,eACxB,mBAAQD,KAAK,SAAb,wBAEF,wBACGtB,GACCA,EAAYwB,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OACd,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,GAAME,MAAO,CAACC,KAAMtB,GAAzC,SAAqDkB,KAD9CC,EADK,OAMpB,SAAC,KAAD,MAGL,C,4MClCM,SAAgBI,IAAvB,4CAAO,OAAP,oBAAO,oGACoBC,IAAM,sBAD1B,cACGC,EADH,yBAEIA,EAASC,MAFb,kEAIA,SAAevB,IAAtB,4CAAO,OAAP,oBAAO,yGAAsCO,EAAtC,+BAA8C,GAA9C,SACoBc,IAAAA,IAAA,6BAAgCd,IADpD,cACGe,EADH,yBAEIA,EAASC,KAAKC,SAFlB,mEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,uFACoBL,IAAAA,IAAA,iBAAoBK,IADxC,cACGJ,EADH,yBAEIA,EAASC,MAFb,kEAOA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,uFACoBP,IAAAA,IAAA,gBAAmBO,EAAnB,aADpB,cACGN,EADH,yBAEIA,EAASC,MAFb,kEAKA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAiCD,GAAjC,uFACoBP,IAAAA,IAAA,gBAAmBO,EAAnB,aADpB,cACGN,EADH,yBAEIA,EAASC,MAFb,kEAxBPF,IAAAA,SAAAA,QAAyB,gCACzBA,IAAAA,SAAAA,OAAwB,CAAES,QAFd,mC","sources":["pages/MoviesPage/MoviesPage.jsx","servises/api.js"],"sourcesContent":["import { Link, Outlet, useSearchParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchSearchMovieByWord } from '../../servises/api';\n\nconst MoviesPage = () => {\n  const [searchMovie, setSearchMovie] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const querySearch = searchParams.get('search');\n  const location = useLocation();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const query = form.elements[0].value;\n    setSearchParams({ search: query });\n    form.reset();\n  };\n\n  useEffect(() => {\n    if (!querySearch) return;\n    fetchSearchMovieByWord(querySearch).then(setSearchMovie);\n  }, [querySearch]);\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"movieName\" />\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul>\n        {searchMovie &&\n          searchMovie.map(({ title, id }) => (\n            <li key={id}>\n              <Link to={`/movies/${id}`} state={{from: location}}>{title}</Link>\n            </li>\n          ))}\n      </ul>\n      <Outlet />\n    </>\n  );\n};\nexport default MoviesPage","import axios from \"axios\";\n\nconst KEY = \"a853a8d0502c53b63fcd011b60b0bc46\";\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\naxios.defaults.params = { api_key: KEY};\n\nexport async function  fetchGetTrendMovies() {\n    const response = await axios(\"trending/movie/day\")\n    return response.data;\n}\nexport async function fetchSearchMovieByWord(query = '') {\n    const response = await axios.get(`search/movie?query=${query}`);\n    return response.data.results;\n  \n}\nexport async function fetchMovieById(movieId) {\n    const response = await axios.get(`/movie/${movieId}`)\n    return response.data\n}\n \n\n \nexport async function fetchMovieCast(movie_id) {\n    const response = await axios.get(`movie/${movie_id}/credits`)\n    return response.data\n}\n \nexport async function fetchMovieReviews(movie_id) {\n    const response = await axios.get(`movie/${movie_id}/reviews`)\n    return response.data\n }"],"names":["useState","searchMovie","setSearchMovie","useSearchParams","searchParams","setSearchParams","querySearch","get","location","useLocation","useEffect","fetchSearchMovieByWord","then","onSubmit","e","preventDefault","form","target","query","elements","value","search","reset","type","name","map","title","id","to","state","from","fetchGetTrendMovies","axios","response","data","results","fetchMovieById","movieId","fetchMovieCast","movie_id","fetchMovieReviews","api_key"],"sourceRoot":""}