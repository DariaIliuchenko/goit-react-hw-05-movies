{"version":3,"file":"static/js/748.11118fed.chunk.js","mappings":"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","sources":["components/Container/Container.styled.js","components/Container/Container.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","pages/MoviesPage/MoviesPage.styled.js","pages/MoviesPage/MoviesPage.jsx","servises/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContainerWpr = styled.div`\n  padding: 0;\n  margin: 0 auto;\n  width: 1280px;\n  \n`;\n\nexport const Title = styled.h2`\n  font-size: 36px;\n  font-weight: 700;\n  margin-bottom: 60px;\n  text-align: center;\n  color: #fff;\n`;","import PropTypes from 'prop-types';\n\nimport { ContainerWpr, Title } from './Container.styled';\n\nconst Container = ({ title = '', children }) => {\n  return (\n    <ContainerWpr>\n      {title && <Title>{title}</Title>}\n\n      {children}\n    </ContainerWpr>\n  );\n};\n\nContainer.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;","import styled from 'styled-components';\n\nexport const SectionWrp = styled.section`\n  padding-top: 34px;\n  padding-bottom: 34px;\n  min-height: 100vh;\n  \n`;\n","import PropTypes from 'prop-types';\nimport { SectionWrp } from './Section.styled';\n\nconst Section = ({ children }) => {\n  return <SectionWrp>{children}</SectionWrp>;\n};\n\nSection.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;","import styled from \"styled-components\";\nimport { Link } from 'react-router-dom';\nexport const Input = styled.input`\n  height: 40px;\n  width: 350px;\n  outline: none;\n  border: 1px solid #fff;\n  border-radius: 4px;\n  padding-left: 50px;\n  background: transparent;\n  height: 50px;\n  color: #fff;\n\n  font-size: 16px;\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  top: 1px;\n  left: 438px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 10px;\n  border: none;\n  border-right: 1px solid #fff;\n  border-radius: 4px;\n  cursor: pointer;\n  background: #fff;\n  height: 52px;\n  \n`;\nexport const Form = styled.form`\n  position: relative;\n  justify-content: center;\n  display: flex;\n  \n  \n  \n  \n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  list-style: none;\n  padding-left:0;\n  justify-content: center;\n  margin-top: 80px;\n  background: rgba(32,51,54,1);\n  \n`;\n\nexport const ItemLink = styled(Link)`\n  color: #ffffff;\n  font-size: 18px;\n  width: 100%;\n  height: 100%;\n  transition: text-decoration 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-decoration: none;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  width: 200px;\n  text-align: center;\n  border: 1px solid #000;\n  border-radius: 0px 0px 4px 4px;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    transform: scale(1.04);\n    box-shadow: 0px 2px 27px -7px rgba(252,252,252,1);\n    \n  }\n`;\n\nexport const Title = styled.h3`\n  font-size: 16px;\n  font-weight: 500;\n  padding: 8px;\n  flex-grow: 1;\n`;","import { useSearchParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { Input, Button, Form, List, Item, ItemLink, Title} from \"./MoviesPage.styled\"\nimport { fetchSearchMovieByWord } from '../../servises/api';\nimport Container from 'components/Container/Container';\nimport Section from 'components/Section/Section';\nimport { BsSearch } from 'react-icons/bs';\nimport { IMAGE_URL } from '../../servises/api';\n\nconst MoviesPage = () => {\n  const [searchMovie, setSearchMovie] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const querySearch = searchParams.get('search');\n  const location = useLocation();\n  \n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const query = form.elements[0].value;\n    setSearchParams({ search: query });\n    form.reset();\n  };\n\n  useEffect(() => {\n    if (!querySearch) return ;\n    fetchSearchMovieByWord(querySearch).then(setSearchMovie);\n  }, [querySearch]);\n\n  return (\n    <Section>\n      <Container>\n        <Form onSubmit={handleSubmit}>\n          <Input type=\"text\"\n            name=\"query\"\n            placeholder=\"Search movie\"\n            autoComplete=\"off\" />\n          <Button type=\"submit\"><BsSearch size=\"24\" color=\"red\" /></Button>\n        </Form>\n        <List>\n          {searchMovie &&\n            searchMovie.map(({ id, title, poster_path }) => (\n              \n              <Item key={id}>\n                <ItemLink to={`/movies/${id}`} state={{ from: location }}>\n                  {poster_path && (\n                      <img src={IMAGE_URL + 'w200' + poster_path} alt={title} />\n                    )}\n                    <Title>{title}</Title>\n                </ItemLink>\n              </Item>\n            ))}\n        </List>\n      </Container>\n    </Section>\n  );\n};\nexport default MoviesPage;\n","import axios from \"axios\";\n\nconst KEY = \"a853a8d0502c53b63fcd011b60b0bc46\";\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\naxios.defaults.params = { api_key: KEY };\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/';\n\nexport async function  fetchGetTrendMovies() {\n    const response = await axios(\"trending/movie/day\")\n    return response.data;\n}\nexport async function fetchSearchMovieByWord(query = '') {\n    const response = await axios.get(`search/movie?query=${query}`);\n    return response.data.results;\n  \n}\nexport async function fetchMovieById(movieId) {\n    const response = await axios.get(`/movie/${movieId}`)\n    return response.data\n}\n \n\n \nexport async function fetchMovieCast(movie_id) {\n    const response = await axios.get(`movie/${movie_id}/credits`)\n    return response.data\n}\n \nexport async function fetchMovieReviews(movie_id) {\n    const response = await axios.get(`movie/${movie_id}/reviews`)\n    return response.data\n }"],"names":["ContainerWpr","styled","Title","title","children","SectionWrp","Input","Button","Form","List","ItemLink","Link","Item","useState","searchMovie","setSearchMovie","useSearchParams","searchParams","setSearchParams","querySearch","get","location","useLocation","useEffect","fetchSearchMovieByWord","then","Section","Container","onSubmit","e","preventDefault","form","target","query","elements","value","search","reset","type","name","placeholder","autoComplete","size","color","map","id","poster_path","to","state","from","src","IMAGE_URL","alt","axios","api_key","fetchGetTrendMovies","response","data","results","fetchMovieById","movieId","fetchMovieCast","movie_id","fetchMovieReviews"],"sourceRoot":""}